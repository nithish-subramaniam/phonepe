# -*- coding: utf-8 -*-
"""phonepe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J5Z-QU9Hs64FCqyYSiUnHmH6CcxGmp_Q

# Cloning the github
"""

!git clone https://github.com/PhonePe/pulse.git

"""# Aggregated Transaction"""

!pip install pandas
import pandas as pd
import json
import os

#This is to direct the path to get the data as states

path="pulse/data/aggregated/transaction/country/india/state/"
Agg_state_list=os.listdir(path)
Agg_state_list
#Agg_state_list--> to get the list of states in India

#<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>#

#This is to extract the data's to create a dataframe

clm={'State':[], 'Year':[],'Quater':[],'Transacion_type':[], 'Transacion_count':[], 'Transacion_amount':[]}
for i in Agg_state_list:
    p_i=path+i+"/"
    Agg_yr=os.listdir(p_i)    
    for j in Agg_yr:
        p_j=p_i+j+"/"
        Agg_yr_list=os.listdir(p_j)        
        for k in Agg_yr_list:
            p_k=p_j+k
            Data=open(p_k,'r')
            D=json.load(Data)
            for z in D['data']['transactionData']:
              Name=z['name']
              count=z['paymentInstruments'][0]['count']
              amount=z['paymentInstruments'][0]['amount']
              clm['Transacion_type'].append(Name)
              clm['Transacion_count'].append(count)
              clm['Transacion_amount'].append(amount)
              clm['State'].append(i)
              clm['Year'].append(j)
              clm['Quater'].append(int(k.strip('.json')))
#Succesfully created a dataframe
pd.DataFrame(clm)
df=pd.DataFrame(clm)
df

#storing the dataframe
df.to_csv("agg_transaction_state.csv")

"""# Aggregated user"""

path="pulse/data/aggregated/user/country/india/state/"
Agg_state_list=os.listdir(path)
Agg_state_list
#Agg_state_list--> to get the list of states in India

#<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>#

#This is to extract the data's to create a dataframe

clm={'State':[], 'Year':[],'Quater':[],'User_Brand':[], 'Brand_Count':[], 'Brand_Percentage':[]}
for i in Agg_state_list:
    p_i=path+i+"/"
    Agg_yr=os.listdir(p_i)    
    for j in Agg_yr:
        p_j=p_i+j+"/"
        Agg_yr_list=os.listdir(p_j)        
        for k in Agg_yr_list:
            p_k=p_j+k
            Data=open(p_k,'r')
            D=json.load(Data)
            
            if D['data']['usersByDevice'] is None:
                continue
            
            for z in D['data']['usersByDevice']:
                User_Brand=z['brand']
                User_Count=z['count']
                Brand_Percentage=z['percentage']
                clm['User_Brand'].append(User_Brand)
                clm['Brand_Count'].append(User_Count)
                clm['Brand_Percentage'].append(Brand_Percentage)
                clm['State'].append(i)
                clm['Year'].append(j)
                clm['Quater'].append(int(k.strip('.json')))
#Succesfully created a dataframe
pd.DataFrame(clm)
df=pd.DataFrame(clm)
df

#storing the dataframe
df.to_csv("agg_user_state.csv")

C:\Users\computer\Desktop\Phonepe\pulse\pulse\data\map\transaction\hover\country\india\state

"""# Map transaction"""

path="pulse/data/map/transaction/hover/country/india/state/"
Agg_state_list=os.listdir(path)
Agg_state_list
#Agg_state_list--> to get the list of states in India

#<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>#

#This is to extract the data's to create a dataframe

clm={'State':[], 'Year':[],'Quater':[],'Hover_area':[], 'Hover_count':[], 'Hover_amount':[]}
for i in Agg_state_list:
    p_i=path+i+"/"
    Agg_yr=os.listdir(p_i)    
    for j in Agg_yr:
        p_j=p_i+j+"/"
        Agg_yr_list=os.listdir(p_j)        
        for k in Agg_yr_list:
            p_k=p_j+k
            Data=open(p_k,'r')
            D=json.load(Data)
            for z in D['data']["hoverDataList"]:
              Area_Name=z['name']
              Hover_Count=z["metric"][0]['count']
              Hover_Amount=z["metric"][0]['amount']
              clm['Hover_area'].append(Area_Name)
              clm['Hover_count'].append(Hover_Count)
              clm['Hover_amount'].append(Hover_Amount)
              clm['State'].append(i)
              clm['Year'].append(j)
              clm['Quater'].append(int(k.strip('.json')))
#Succesfully created a dataframe
pd.DataFrame(clm)
df=pd.DataFrame(clm)
df

#storing the dataframe
df.to_csv("map_trans_state.csv")

"""# Map user"""

path="pulse/data/map/user/hover/country/india/state/"
Agg_state_list=os.listdir(path)
Agg_state_list
#Agg_state_list--> to get the list of states in India

#<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>#

#This is to extract the data's to create a dataframe

clm={'State':[], 'Year':[],'Quater':[],'Disrict':[], 'Reg_users':[]}
for i in Agg_state_list:
    p_i=path+i+"/"
    Agg_yr=os.listdir(p_i)    
    for j in Agg_yr:
        p_j=p_i+j+"/"
        Agg_yr_list=os.listdir(p_j)        
        for k in Agg_yr_list:
            p_k=p_j+k
            Data=open(p_k,'r')
            D=json.load(Data)
            for z in D:
                Hoverdata=D["data"]["hoverData"]
                for i,data in Hoverdata.items():
                    clm['Disrict'].append(i)
                    clm['Reg_users'].append(data["registeredUsers"])
                    clm['State'].append(i)
                    clm['Year'].append(j)
                    clm['Quater'].append(int(k.strip('.json')))
#Succesfully created a dataframe
pd.DataFrame(clm)
df=pd.DataFrame(clm)
df

#storing the dataframe
df.to_csv("map_user_state.csv")

"""# Top transaction"""

path="pulse/data/top/transaction/country/india/state/"
Agg_state_list=os.listdir(path)
Agg_state_list
#Agg_state_list--> to get the list of states in India

#<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>#

#This is to extract the data's to create a dataframe

clm={'State':[], 'Year':[],'Quater':[],'District':[], 'Count':[], 'Amount':[]}
for i in Agg_state_list:
    p_i=path+i+"/"
    Agg_yr=os.listdir(p_i)    
    for j in Agg_yr:
        p_j=p_i+j+"/"
        Agg_yr_list=os.listdir(p_j)        
        for k in Agg_yr_list:
            p_k=p_j+k
            Data=open(p_k,'r')
            D=json.load(Data)
            for z in D['data']['districts']:
              DisName=z['entityName']
              count=z["metric"]['count']
              amount=z["metric"]['amount']
              clm['District'].append(DisName)
              clm['Count'].append(count)
              clm['Amount'].append(amount)
              clm['State'].append(i)
              clm['Year'].append(j)
              clm['Quater'].append(int(k.strip('.json')))
#Succesfully created a dataframe
pd.DataFrame(clm)
df=pd.DataFrame(clm)
df

#storing the dataframe
df.to_csv("top_trans_state.csv")

"""# Top user"""

path="pulse/data/top/user/country/india/state/"
Agg_state_list=os.listdir(path)
Agg_state_list
#Agg_state_list--> to get the list of states in India

#<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>#

#This is to extract the data's to create a dataframe

clm={'State':[], 'Year':[],'Quater':[],'District_name':[], 'Reguser':[]}
for i in Agg_state_list:
    p_i=path+i+"/"
    Agg_yr=os.listdir(p_i)    
    for j in Agg_yr:
        p_j=p_i+j+"/"
        Agg_yr_list=os.listdir(p_j)        
        for k in Agg_yr_list:
            p_k=p_j+k
            Data=open(p_k,'r')
            D=json.load(Data)
            for z in D['data']['districts']:
              DisName=z["name"]
              DisReg_user=z["registeredUsers"]
              #Pin_name=z["name"]
              #pin_reguser=z["registeredUsers"]
              clm['District_name'].append(DisName)
              clm['Reguser'].append(DisReg_user)
              #clm['Pinname'].append(Pin_name)
              #clm['pinuser'].append(pin_reguser)
              clm['State'].append(i)
              clm['Year'].append(j)
              clm['Quater'].append(int(k.strip('.json')))
#Succesfully created a dataframe
pd.DataFrame(clm)
df=pd.DataFrame(clm)
df

#storing the dataframe
df.to_csv("top_user_state.csv")

"""# Creating connection and uploading the datas into mysql

# Aggregated transaction
"""

import pandas as pd

agg_trans= pd.read_csv('agg_transaction_state.csv',index_col=False,delimiter = ',')

agg_trans.head()

agg_trans=agg_trans.drop(['Unnamed: 0'],axis=1)

agg_trans

import mysql.connector as msql
from mysql.connector import Error
try:
    conn = msql.connect(host='localhost', user='root',password='Surya@0906')#give ur username, password
    if conn.is_connected():
        cursor = conn.cursor()
        cursor.execute("CREATE DATABASE Phonepe")
        print("Database is created")
except Error as e:
    print("Error while connecting to MySQL", e)

cursor.execute('USE Phonepe')

cursor.execute('CREATE TABLE Aggregate_transaction (State VARCHAR(100), Year Year, Quater VARCHAR(30), Transaction_type VARCHAR(75),  Transaction_count VARCHAR(75),  Transaction_amount VARCHAR(75) )')
print("Table is created")

for i,row in agg_trans.iterrows():
            #here %S means string values 
            sql = "INSERT INTO Phonepe.Aggregate_transaction VALUES (%s,%s,%s,%s,%s,%s)"
            cursor.execute(sql, tuple(row))
            
            # the connection is not auto committed by default, so we must commit to save our changes
            conn.commit()

sql = "SELECT * FROM Phonepe.Aggregate_transaction"
cursor.execute(sql)
# Fetch all the records
result = cursor.fetchall()
for i in result:
    print(i)

"""# Aggregated user"""

agg_user= pd.read_csv('agg_user_state.csv',index_col=False,delimiter = ',')
agg_user

agg_user=agg_user.drop(['Unnamed: 0'],axis=1)
agg_user

agg_user['Brand_Percentage'] = agg_user['Brand_Percentage']*100
agg_user

agg_user

cursor.execute('USE Phonepe')
cursor.execute('CREATE TABLE Aggregate_User (State VARCHAR(100), Year Year, Quater VARCHAR(30), User_Brand VARCHAR(75),  Brand_Count BIGINT,  Brand_Percentage VARCHAR(75) )')
print("Table is created")

for i,row in agg_user.iterrows():
            #here %S means string values 
            sql = "INSERT INTO Phonepe.Aggregate_User VALUES (%s,%s,%s,%s,%s,%s)"
            cursor.execute(sql, tuple(row))
            
            # the connection is not auto committed by default, so we must commit to save our changes
            conn.commit()

sql = "SELECT * FROM Phonepe.Aggregate_User"
cursor.execute(sql)
# Fetch all the records
result = cursor.fetchall()
for i in result:
    print(i)

"""# Map transaction"""

map_trans= pd.read_csv('map_trans_state.csv',index_col=False,delimiter = ',')
map_trans

map_trans=map_trans.drop(['Unnamed: 0'],axis=1)
map_trans

cursor.execute('USE Phonepe')
cursor.execute('CREATE TABLE Map_transaction (State VARCHAR(100), Year Year, Quater VARCHAR(30), Hover_area VARCHAR(75),  Hover_count VARCHAR(15),  Hover_amount VARCHAR(75) )')
print("Table is created")

for i,row in map_trans.iterrows():
            #here %S means string values 
            sql = "INSERT INTO Phonepe.Map_transaction VALUES (%s,%s,%s,%s,%s,%s)"
            cursor.execute(sql, tuple(row))
            
            # the connection is not auto committed by default, so we must commit to save our changes
            conn.commit()

sql = "SELECT * FROM Phonepe.Map_transaction"
cursor.execute(sql)
# Fetch all the records
result = cursor.fetchall()
for i in result:
    print(i)

"""# Map user"""

map_user= pd.read_csv('map_user_state.csv',index_col=False,delimiter = ',')
map_user

map_user=map_user.drop(['Unnamed: 0'],axis=1)
map_user

cursor.execute('USE Phonepe')
cursor.execute('CREATE TABLE Map_User (State VARCHAR(100), Year Year, Quater VARCHAR(30), Disrict VARCHAR(75),  Reg_users VARCHAR(15) )')
print("Table is created")

for i,row in map_user.iterrows():
            #here %S means string values 
            sql = "INSERT INTO Phonepe.Map_User VALUES (%s,%s,%s,%s,%s)"
            cursor.execute(sql, tuple(row))
            
            # the connection is not auto committed by default, so we must commit to save our changes
            conn.commit()

sql = "SELECT * FROM Phonepe.Map_User"
cursor.execute(sql)
# Fetch all the records
result = cursor.fetchall()
for i in result:
    print(i)

"""# Top Transaction"""

top_trans= pd.read_csv('top_trans_state.csv',index_col=False,delimiter = ',')
top_trans

top_trans=top_trans.drop(['Unnamed: 0'],axis=1)
top_trans

cursor.execute('USE Phonepe')
cursor.execute('CREATE TABLE Top_trasaction (State VARCHAR(100), Year Year, Quater VARCHAR(30), District VARCHAR(75),  Count VARCHAR(15),Amount VARCHAR(20) )')
print("Table is created")

for i,row in top_trans.iterrows():
            #here %S means string values 
            sql = "INSERT INTO Phonepe.Top_trasaction VALUES (%s,%s,%s,%s,%s,%s)"
            cursor.execute(sql, tuple(row))
            
            # the connection is not auto committed by default, so we must commit to save our changes
            conn.commit()

sql = "SELECT * FROM Phonepe.Top_trasaction"
cursor.execute(sql)
# Fetch all the records
result = cursor.fetchall()
for i in result:
    print(i)

"""# Top user"""

top_user= pd.read_csv('top_user_state.csv',index_col=False,delimiter = ',')
top_user

top_user=top_user.drop(['Unnamed: 0'],axis=1)
top_user

cursor.execute('USE Phonepe')
cursor.execute('CREATE TABLE Top_User (State VARCHAR(100), Year Year, Quater VARCHAR(30), District_name VARCHAR(75),  Reguser VARCHAR(15) )')
print("Table is created")

for i,row in top_user.iterrows():
            #here %S means string values 
            sql = "INSERT INTO Phonepe.Top_User VALUES (%s,%s,%s,%s,%s)"
            cursor.execute(sql, tuple(row))
            
            # the connection is not auto committed by default, so we must commit to save our changes
            conn.commit()

sql = "SELECT * FROM Phonepe.Top_User"
cursor.execute(sql)
# Fetch all the records
result = cursor.fetchall()
for i in result:
    print(i)

import pymysql
import pandas as pd
import plotly.express as px
import streamlit as st

# Connect to the MySQL database
conn = pymysql.connect(user='root', password='Surya@0906', host='localhost', database='Phonepe')
cursor=conn.cursor()
# Query the database and retrieve the data into a pandas dataframe
cursor.execute('SELECT * FROM Phonepe.Top_User')
top_user_df=cursor.fetchall()
cursor.close()
conn.close()

fig=px.scatter(top_user_df,x='State',y='Year',color='Quater',size='District_name',hover_data='Reguser')

st.plotly_chart(fig)